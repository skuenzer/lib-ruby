#  SPDX-License-Identifier: BSD-3-Clause
#
#  Ruby Makefile.uk
#
#  Authors: Andrei Gogonea <andrei.gogonea09@gmail.com>
#           Costin Lupu <costin.lupu@cs.pub.ro>
#
#  Copyright (c) 2019, University Politehnica of Bucharest. All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived from
#     this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

################################################################################
# Library registration
################################################################################
$(eval $(call addlib_s,libruby,$(CONFIG_LIBRUBY)))
$(eval $(call addlib_s,libruby_ext,$(CONFIG_LIBRUBY_EXT)))
$(eval $(call addlib_s,libruby_enc,$(CONFIG_LIBRUBY_ENC)))
$(eval $(call addlib_s,libruby_test,$(CONFIG_LIBRUBY_TEST)))

################################################################################
# Sources
################################################################################
LIBRUBY_MAJOR=2
LIBRUBY_MINOR=6
LIBRUBY_REVISION=0
LIBRUBY_VERSION=$(LIBRUBY_MAJOR)_$(LIBRUBY_MINOR)
LIBRUBY_VERSION_LONG=$(LIBRUBY_MAJOR).$(LIBRUBY_MINOR).$(LIBRUBY_REVISION)
LIBRUBY_ARCHIVE=ruby_$(LIBRUBY_VERSION).zip
LIBRUBY_URL=https://github.com/ruby/ruby/archive/$(LIBRUBY_ARCHIVE)
LIBRUBY_DIR=ruby-ruby_$(LIBRUBY_VERSION)
LIBRUBY_PATCHDIR=$(LIBRUBY_BASE)/patches
$(eval $(call fetch,libruby,$(LIBRUBY_URL),ruby_$(LIBRUBY_ARCHIVE)))
$(eval $(call patch,libruby,$(LIBRUBY_PATCHDIR),$(LIBRUBY_DIR)))

################################################################################
# Global and common flags
################################################################################
# Suppress flags
LIBRUBY_SUPPRESS_FLAGS-y = -Wno-cast-function-type -Wno-long-long \
	-Wno-missing-field-initializers -Wno-overlength-strings \
	-Wno-packed-bitfield-compat -Wno-tautological-compare \
	-Wno-unused-parameter -Wno-unused-value -Wno-implicit-fallthrough \
	-Wno-unused-but-set-variable -Wno-type-limits
LIBRUBY_SUPPRESS_FLAGS-$(call gcc_version_ge,9,0) += -Wno-address-of-packed-member
LIBRUBY_SUPRESS_CFLAGS-y   += $(LIBRUBY_SUPPRESS_FLAGS-y) \
	-Wno-pointer-to-int-cast -Wno-int-to-pointer-cast
LIBRUBY_SUPRESS_CXXFLAGS-y += $(LIBRUBY_SUPPRESS_FLAGS-y)
LIBRUBY_CFLAGS-y           += $(LIBRUBY_SUPRESS_CFLAGS-y)
LIBRUBY_CXXFLAGS-y         += $(LIBRUBY_SUPRESS_CXXFLAGS-y)

CFLAGS-$(CONFIG_LIBRUBY)   += -fno-gcse -fno-gnu-unique \
                  -fno-move-loop-invariants
CXXFLAGS-$(CONFIG_LIBRUBY) += -fno-gcse -fno-gnu-unique \
                  -fno-move-loop-invariants
GOFLAGS-$(CONFIG_LIBRUBY)  += -fno-gcse -fno-gnu-unique \
                  -fno-move-loop-invariants

################################################################################
# Helpers
################################################################################
LIBRUBY_SRC=$(LIBRUBY_ORIGIN)/$(LIBRUBY_DIR)

################################################################################
# Global and common includes
################################################################################
LIBRUBY_CINCLUDES-y += -I$(LIBRUBY_BASE)/include \
	-I$(LIBRUBY_BASE)/generated \
	-I$(LIBRUBY_SRC) \
	-I$(LIBRUBY_SRC)/include \
	-I$(LIBRUBY_SRC)/enc/unicode/12.1.0

################################################################################
# Core
################################################################################
# As taken from original build:
LIBRUBY_CFLAGS-y += -std=gnu99 -D_FORTIFY_SOURCE=2 \
	 -fno-strict-overflow -fvisibility=hidden -fexcess-precision=standard \
	-DRUBY_EXPORT -DCANONICALIZATION_FOR_MATHN

LIBRUBY_SRCS-y += $(LIBRUBY_BASE)/thread.c|unikraft
LIBRUBY_SRCS-$(CONFIG_LIBRUBY_MAIN_FUNCTION) += $(LIBRUBY_BASE)/ruby_main_example.c|unikraft
LIBRUBY_RUBY_MAIN_EXAMPLE_FLAGS-y = -DLIBRUBY_VERSION_LONG=\"$(LIBRUBY_VERSION_LONG)\"

ifeq ($(CONFIG_LIBRUBY_MINI),y)
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dmydln.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/miniinit.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/miniprelude.c
else
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dln.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/localeinit.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/loadpath.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/prelude.c
endif

LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/main.c
LIBRUBY_MAIN_FLAGS-y += -Dmain=ruby_main
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/array.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/ast.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/bignum.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/class.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/compar.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/compile.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/complex.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/cont.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/debug.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/debug_counter.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dir.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dln_find.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/encoding.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enum.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enumerator.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/error.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/eval.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/file.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/gc.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/hash.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/inits.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/io.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/iseq.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/load.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/marshal.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/math.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/mjit.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/mjit_compile.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/node.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/numeric.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/object.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/pack.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/parse.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/proc.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/process.c
LIBRUBY_PROCESS_FLAGS-y += -Wno-incompatible-pointer-types
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/random.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/range.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/rational.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/re.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regcomp.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regenc.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regerror.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regexec.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regparse.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/regsyntax.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/ruby.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/safe.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/signal.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/sprintf.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/st.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/strftime.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/string.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/struct.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/symbol.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/thread.c
LIBRUBY_THREAD_FLAGS += -Wno-unused-function
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/time.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/transcode.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/transient_heap.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/util.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/variable.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/version.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/vm.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/vm_backtrace.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/vm_dump.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/vm_trace.c
LIBRUBY_SRCS-$(CONFIG_ARCH_X86_64) += $(LIBRUBY_SRC)/coroutine/amd64/Context.S
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/ascii.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/us_ascii.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/unicode.c
LIBRUBY_UNICODE_FLAGS-y += -I$(LIBRUBY_SRC)/enc/unicode/12.1.0/
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/utf_8.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/trans/newline.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/./missing/setproctitle.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/addr2line.c

################################################################################
# Extensions
################################################################################
LIBRUBY_EXT_CFLAGS-y += $(LIBRUBY_CINCLUDES-y)
LIBRUBY_EXT_CFLAGS-y += $(LIBRUBY_SUPPRESS_FLAGS-y)
LIBRUBY_EXT_CFLAGS-y += -DRUBY_EXTCONF_H=\"extconf.h\"

ifeq ($(CONFIG_LIBRUBY_MINI),y)
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dmyext.c
else
LIBRUBY_SRCS-y += $(LIBRUBY_BASE)/generated/ext/extinit.c
endif

ifeq ($(CONFIG_LIBRUBY_EXT_STRSCAN),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/strscan/strscan.c
LIBRUBY_EXT_STRSCAN_FLAGS-y += -I$(LIBRUBY_SRC)/ext/strscan
endif
ifeq ($(CONFIG_LIBRUBY_EXT_SYSLOG),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/syslog/syslog.c
LIBRUBY_EXT_SYSLOG_FLAGS-y += -I$(LIBRUBY_SRC)/ext/syslog
endif
ifeq ($(CONFIG_LIBRUBY_EXT_JSON),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/json/generator/generator.c
LIBRUBY_EXT_GENERATOR_FLAGS-y += -I$(LIBRUBY_SRC)/ext/json/generator
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/json/parser/parser.c|json
LIBRUBY_EXT_PARSER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/json/parser
endif
ifeq ($(CONFIG_LIBRUBY_EXT_RBCONFIG_SIZEOF),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/rbconfig/sizeof/sizes.c
LIBRUBY_EXT_SIZES_FLAGS-y += -I$(LIBRUBY_SRC)/ext/rbconfig/sizeof
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/rbconfig/sizeof/limits.c
LIBRUBY_EXT_LIMITS_FLAGS-y += -I$(LIBRUBY_SRC)/ext/rbconfig/sizeof
endif
ifeq ($(CONFIG_LIBRUBY_EXT_BIGDECIMAL),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/bigdecimal/bigdecimal.c
LIBRUBY_EXT_BIGDECIMAL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/bigdecimal
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/bigdecimal/util/util.c
LIBRUBY_EXT_UTIL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/bigdecimal/util
endif
ifeq ($(CONFIG_LIBRUBY_EXT_RACC_CPARSE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/racc/cparse/cparse.c
LIBRUBY_EXT_CPARSE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/racc/cparse
endif
ifeq ($(CONFIG_LIBRUBY_EXT_DIGEST),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/digest.c
LIBRUBY_EXT_DIGEST_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/bubblebabble/bubblebabble.c
LIBRUBY_EXT_BUBBLEBABBLE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest/bubblebabble
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/md5/md5init.c
LIBRUBY_EXT_MD5INIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest/md5
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/rmd160/rmd160init.c
LIBRUBY_EXT_RMD160INIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest/rmd160
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/sha1/sha1init.c
LIBRUBY_EXT_SHA1INIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest/sha1
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/digest/sha2/sha2init.c
LIBRUBY_EXT_SHA2INIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/digest/sha2
endif
ifeq ($(CONFIG_LIBRUBY_EXT_PSYCH),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/psych_to_ruby.c
LIBRUBY_EXT_PSYCH_TO_RUBY_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/psych_yaml_tree.c
LIBRUBY_EXT_PSYCH_YAML_TREE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/psych_emitter.c
LIBRUBY_EXT_PSYCH_EMITTER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/psych_parser.c|psych
LIBRUBY_EXT_PSYCH_PARSER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/psych.c
LIBRUBY_EXT_PSYCH_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/dumper.c
LIBRUBY_EXT_DUMPER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/parser.c|yaml
LIBRUBY_EXT_PARSER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/scanner.c
LIBRUBY_EXT_SCANNER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/api.c
LIBRUBY_EXT_API_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/loader.c
LIBRUBY_EXT_LOADER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/writer.c
LIBRUBY_EXT_WRITER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/emitter.c
LIBRUBY_EXT_EMITTER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/psych/yaml/reader.c
LIBRUBY_EXT_READER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/psych -I$(LIBRUBY_SRC)/ext/psych/yaml
endif
ifeq ($(CONFIG_LIBRUBY_EXT_CGI_ESCAPE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/cgi/escape/escape.c
LIBRUBY_EXT_ESCAPE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/cgi/escape
endif
ifeq ($(CONFIG_LIBRUBY_EXT_FCNTL),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fcntl/fcntl.c
LIBRUBY_EXT_FCNTL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fcntl
endif
ifeq ($(CONFIG_LIBRUBY_EXT_SOCKET),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/init.c|socket
LIBRUBY_EXT_INIT_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/constants.c
LIBRUBY_EXT_CONSTANTS_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/basicsocket.c
LIBRUBY_EXT_BASICSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/socket.c
LIBRUBY_EXT_SOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/ipsocket.c
LIBRUBY_EXT_IPSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/tcpsocket.c
LIBRUBY_EXT_TCPSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/tcpserver.c
LIBRUBY_EXT_TCPSERVER_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/sockssocket.c
LIBRUBY_EXT_SOCKSSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/udpsocket.c
LIBRUBY_EXT_UDPSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/unixsocket.c
LIBRUBY_EXT_UNIXSOCKET_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/unixserver.c
LIBRUBY_EXT_UNIXSERVER_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/option.c
LIBRUBY_EXT_OPTION_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/ancdata.c
LIBRUBY_EXT_ANCDATA_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/raddrinfo.c
LIBRUBY_EXT_RADDRINFO_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/socket/ifaddr.c
LIBRUBY_EXT_IFADDR_FLAGS-y += -I$(LIBRUBY_BASE)/generated/ext/socket
endif
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/ext/pathname/pathname.c
LIBRUBY_PATHNAME_FLAGS-y += -I$(LIBRUBY_SRC)/ext/pathname
ifeq ($(CONFIG_LIBRUBY_EXT_DATE_CORE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/date/date_core.c
LIBRUBY_EXT_DATE_CORE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/date
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/date/date_parse.c
LIBRUBY_EXT_DATE_PARSE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/date
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/date/date_strftime.c
LIBRUBY_EXT_DATE_STRFTIME_FLAGS-y += -I$(LIBRUBY_SRC)/ext/date
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/date/date_strptime.c
LIBRUBY_EXT_DATE_STRPTIME_FLAGS-y += -I$(LIBRUBY_SRC)/ext/date
endif
ifeq ($(CONFIG_LIBRUBY_EXT_PTY),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/pty/pty.c
LIBRUBY_EXT_PTY_FLAGS-y += -I$(LIBRUBY_SRC)/ext/pty
endif
ifeq ($(CONFIG_LIBRUBY_EXT_OPENSSL),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/openssl_missing.c
LIBRUBY_EXT_OPENSSL_MISSING_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl.c
LIBRUBY_EXT_OSSL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_asn1.c
LIBRUBY_EXT_OSSL_ASN1_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_bio.c
LIBRUBY_EXT_OSSL_BIO_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_bn.c
LIBRUBY_EXT_OSSL_BN_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_cipher.c
LIBRUBY_EXT_OSSL_CIPHER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_config.c
LIBRUBY_EXT_OSSL_CONFIG_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_digest.c
LIBRUBY_EXT_OSSL_DIGEST_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_engine.c
LIBRUBY_EXT_OSSL_ENGINE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_hmac.c
LIBRUBY_EXT_OSSL_HMAC_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_kdf.c
LIBRUBY_EXT_OSSL_KDF_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_ns_spki.c
LIBRUBY_EXT_OSSL_NS_SPKI_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_ocsp.c
LIBRUBY_EXT_OSSL_OCSP_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkcs12.c
LIBRUBY_EXT_OSSL_PKCS12_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkcs7.c
LIBRUBY_EXT_OSSL_PKCS7_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkey.c
LIBRUBY_EXT_OSSL_PKEY_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkey_dh.c
LIBRUBY_EXT_OSSL_PKEY_DH_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkey_dsa.c
LIBRUBY_EXT_OSSL_PKEY_DSA_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkey_ec.c
LIBRUBY_EXT_OSSL_PKEY_EC_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_pkey_rsa.c
LIBRUBY_EXT_OSSL_PKEY_RSA_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_rand.c
LIBRUBY_EXT_OSSL_RAND_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_ssl.c
LIBRUBY_EXT_OSSL_SSL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_ssl_session.c
LIBRUBY_EXT_OSSL_SSL_SESSION_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509.c
LIBRUBY_EXT_OSSL_X509_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509attr.c
LIBRUBY_EXT_OSSL_X509ATTR_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509cert.c
LIBRUBY_EXT_OSSL_X509CERT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509crl.c
LIBRUBY_EXT_OSSL_X509CRL_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509ext.c
LIBRUBY_EXT_OSSL_X509EXT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509name.c
LIBRUBY_EXT_OSSL_X509NAME_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509req.c
LIBRUBY_EXT_OSSL_X509REQ_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509revoked.c
LIBRUBY_EXT_OSSL_X509REVOKED_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/openssl/ossl_x509store.c
LIBRUBY_EXT_OSSL_X509STORE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/openssl
endif
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/ext/stringio/stringio.c
LIBRUBY_STRINGIO_FLAGS-y += -I$(LIBRUBY_SRC)/ext/stringio
ifeq ($(CONFIG_LIBRUBY_EXT_FIBER),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiber/fiber.c
LIBRUBY_EXT_FIBER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiber
endif
ifeq ($(CONFIG_LIBRUBY_EXT_FIDDLE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/closure.c
LIBRUBY_EXT_CLOSURE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/conversions.c
LIBRUBY_EXT_CONVERSIONS_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/fiddle.c
LIBRUBY_EXT_FIDDLE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/function.c
LIBRUBY_EXT_FUNCTION_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/handle.c
LIBRUBY_EXT_HANDLE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/fiddle/pointer.c
LIBRUBY_EXT_POINTER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/fiddle
endif
ifeq ($(CONFIG_LIBRUBY_EXT_ETC),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/etc/etc.c
LIBRUBY_EXT_ETC_FLAGS-y += -I$(LIBRUBY_SRC)/ext/etc
endif
ifeq ($(CONFIG_LIBRUBY_EXT_CONTINUATION),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/continuation/continuation.c
LIBRUBY_EXT_CONTINUATION_FLAGS-y += -I$(LIBRUBY_SRC)/ext/continuation
endif
ifeq ($(CONFIG_LIBRUBY_EXT_OBJSPACE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/objspace/object_tracing.c
LIBRUBY_EXT_OBJECT_TRACING_FLAGS-y += -I$(LIBRUBY_SRC)/ext/objspace
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/objspace/objspace.c
LIBRUBY_EXT_OBJSPACE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/objspace
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/objspace/objspace_dump.c
LIBRUBY_EXT_OBJSPACE_DUMP_FLAGS-y += -I$(LIBRUBY_SRC)/ext/objspace
endif
ifeq ($(CONFIG_LIBRUBY_EXT_COVERAGE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/coverage/coverage.c
LIBRUBY_EXT_COVERAGE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/coverage
endif
ifeq ($(CONFIG_LIBRUBY_EXT_IO_CONSOLE),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/io/console/console.c
LIBRUBY_EXT_CONSOLE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/io/console
endif
ifeq ($(CONFIG_LIBRUBY_EXT_IO_NONBLOCK),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/io/nonblock/nonblock.c
LIBRUBY_EXT_NONBLOCK_FLAGS-y += -I$(LIBRUBY_SRC)/ext/io/nonblock
endif
ifeq ($(CONFIG_LIBRUBY_EXT_IO_WAIT),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/io/wait/wait.c
LIBRUBY_EXT_WAIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/io/wait
endif
ifeq ($(CONFIG_LIBRUBY_EXT_RIPPER),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/ripper/ripper.c
LIBRUBY_EXT_RIPPER_FLAGS-y += -I$(LIBRUBY_SRC)/ext/ripper
endif
ifeq ($(CONFIG_LIBRUBY_EXT_NKF),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/nkf/nkf.c
LIBRUBY_EXT_NKF_FLAGS-y += -I$(LIBRUBY_SRC)/ext/nkf
endif
ifeq ($(CONFIG_LIBRUBY_EXT_ZLIB),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/zlib/zlib.c
LIBRUBY_EXT_ZLIB_FLAGS-y += -I$(LIBRUBY_SRC)/ext/zlib
endif
ifeq ($(CONFIG_LIBRUBY_EXT_SDBM),y)
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/sdbm/_sdbm.c
LIBRUBY_EXT__SDBM_FLAGS-y += -I$(LIBRUBY_SRC)/ext/sdbm
LIBRUBY_EXT_SRCS-y += $(LIBRUBY_SRC)/ext/sdbm/init.c|sdbm
LIBRUBY_EXT_INIT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/sdbm
endif

################################################################################
# Encodings
################################################################################
LIBRUBY_ENC_CFLAGS-y += $(LIBRUBY_CINCLUDES-y)
LIBRUBY_ENC_CFLAGS-y += $(LIBRUBY_SUPPRESS_FLAGS-y)
LIBRUBY_ENC_CFLAGS-y += -DRUBY_EXPORT=1 -DONIG_ENC_REGISTER=rb_enc_register

ifeq ($(CONFIG_LIBRUBY_ENC),y)
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/enc/encinit.c
else
ifneq ($(CONFIG_LIBRUBY_MINI),y)
# Init_enc() is also in miniinit.c
LIBRUBY_SRCS-y += $(LIBRUBY_SRC)/dmyenc.c
endif
endif

# enc/libenc.a
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/encdb.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/big5.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/cp949.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/emacs_mule.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/euc_jp.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/euc_kr.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/euc_tw.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/gb2312.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/gb18030.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/gbk.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_1.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_2.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_3.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_4.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_5.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_6.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_7.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_8.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_9.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_10.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_11.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_13.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_14.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_15.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/iso_8859_16.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/koi8_r.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/koi8_u.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/shift_jis.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/utf_16be.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/utf_16le.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/utf_32be.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/utf_32le.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_31j.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1250.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1251.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1252.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1253.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1254.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/windows_1257.c

# enc/libtrans.a
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/transdb.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/big5.c|trans
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/chinese.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/ebcdic.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/emoji.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/emoji_iso2022_kddi.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/emoji_sjis_docomo.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/emoji_sjis_kddi.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/emoji_sjis_softbank.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/escape.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/gb18030.c|trans
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/gbk.c|trans
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/iso2022.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/japanese.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/japanese_euc.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/japanese_sjis.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/korean.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/single_byte.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/utf8_mac.c
LIBRUBY_ENC_SRCS-y += $(LIBRUBY_SRC)/enc/trans/utf_16_32.c

################################################################################
# Unit testing
################################################################################
LIBRUBY_TEST_CFLAGS-y += $(LIBRUBY_CINCLUDES-y)
LIBRUBY_TEST_CFLAGS-y += $(LIBRUBY_SUPPRESS_FLAGS-y)
LIBRUBY_TEST_CFLAGS-y += -DRUBY_EXTCONF_H=\"extconf.h\"

$(LIBRUBY_SRC)/ext/-test-/file/init_file.c: $(LIBRUBY_SRC)/ext/-test-/file/init.c
	ln -s $< $@
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/file/init_file.c
LIBRUBY_TEST_INIT_FILE_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/file
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/file/fs.c
LIBRUBY_TEST_FS_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/file
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/file/stat.c
LIBRUBY_TEST_STAT_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/file

$(LIBRUBY_SRC)/ext/-test-/time/init_time.c: $(LIBRUBY_SRC)/ext/-test-/time/init.c
	ln -s $< $@
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/time/init_time.c
LIBRUBY_TEST_INIT_TIME_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/time
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/time/leap_second.c
LIBRUBY_TEST_LEAP_SECOND_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/time
LIBRUBY_TEST_SRCS-y += $(LIBRUBY_SRC)/ext/-test-/time/new.c
LIBRUBY_TEST_NEW_FLAGS-y += -I$(LIBRUBY_SRC)/ext/-test-/time

################################################################################
# Prepare rules
################################################################################
NPROC=$(shell nproc)
JOBS=$(shell echo $(NPROC) \* 2 | bc)
LIBRUBY_CONFIGURE_COMMON_PARAMS=--with-static-linked-ext --disable-install-doc --disable-install-rdoc

# Configure origin
$(LIBRUBY_BUILD)/.configured: $(LIBRUBY_BUILD)/.origin
	cd $(LIBRUBY_SRC) && \
		autoconf && \
		./configure $(LIBRUBY_CONFIGURE_COMMON_PARAMS) && \
		touch $@

# Build origin
$(LIBRUBY_BUILD)/.build: $(LIBRUBY_BUILD)/.configured
	cd $(LIBRUBY_SRC) && make -j$(JOBS) && touch $@

UK_PREPARE += $(LIBRUBY_BUILD)/.build

ifeq ($(CONFIG_LIBRUBY_TEST),y)
# Customize config: configure stack size
$(APP_BASE)/.config.orig: $(APP_BASE)/.config
	$(call verbose_cmd,CONFIG,libruby: $(notdir $@), \
		cp $(APP_BASE)/.config $@ && \
		sed -i 's/^CONFIG_STACK_SIZE_PAGE_ORDER=.*$$/CONFIG_STACK_SIZE_PAGE_ORDER=10/g' $(APP_BASE)/.config)

# We need a bigger stack for tests
LIBRUBY_TEST_PREPARED_DEPS = \
	$(APP_BASE)/.config.orig \

$(LIBRUBY_TEST_BUILD)/.prepared: $(LIBRUBY_TEST_PREPARED_DEPS)

UK_PREPARE += $(LIBRUBY_TEST_BUILD)/.prepared
endif

################################################################################
# Root filesystem
################################################################################
# Root filesystem path
RUBY_ROOTFS = $(APP_BASE)/$(path)

# Configure origin
$(RUBY_ROOTFS)/.configured: $(LIBRUBY_BUILD)/.origin
	mkdir -p $(RUBY_ROOTFS) &>/dev/null
	cd $(LIBRUBY_SRC) && \
		autoconf && \
		./configure --prefix=$(shell realpath $(APP_BASE)/$(path)) $(LIBRUBY_CONFIGURE_COMMON_PARAMS) && \
		touch $@ && touch $(LIBRUBY_BUILD)/.configured

# Build Ruby
$(RUBY_ROOTFS)/.build: $(RUBY_ROOTFS)/.configured
	cd $(LIBRUBY_SRC) && make -j$(JOBS) && touch $@ && touch $(LIBRUBY_BUILD)/.build

# Install Ruby
$(RUBY_ROOTFS)/.done: $(RUBY_ROOTFS)/.build
	cd $(LIBRUBY_SRC) && make install
	cp -r $(LIBRUBY_SRC)/.ext $(RUBY_ROOTFS)/lib/ruby/$(LIBRUBY_VERSION_LONG)/
	cp -r $(LIBRUBY_SRC)/test $(RUBY_ROOTFS)/lib/ruby/$(LIBRUBY_VERSION_LONG)/
	cp $(LIBRUBY_BASE)/gems-examples/Gemfile-irb $(RUBY_ROOTFS)/lib/ruby/$(LIBRUBY_VERSION_LONG)/Gemfile
	touch $@

.PHONY: ruby-rootfs
ruby-rootfs: $(RUBY_ROOTFS)/.done
